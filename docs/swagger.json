{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Products app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Operations about."
    },
    {
      "name": "Cart",
      "description": "Operations cart."
    },
    {
      "name": "User",
      "description": "Operations register."
    },
    {
      "name": "Stores",
      "description": "Operations stores."
    }
  ],
  "paths": {
    "/api/customer-reviews": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get of reviews",
        "operationId": "getReviews",
        "description": "Get of Reviews",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully reviews!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully of reviews!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/reviews"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get of detais pharmacies",
        "operationId": "getNearestDetails",
        "description": "Get list of nearest details pharmacies",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found details pharmacies!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully details found pharmacies!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/pharmacies"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/nearest": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get of pharmacies",
        "operationId": "getNearest",
        "description": "Get list of nearest pharmacies",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found pharmacies!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found pharmacies!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/pharmacies"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Create order",
        "operationId": "createOrder",
        "description": "Create a order with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "reguestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "items",
                  "totalAmount",
                  "paymentMethod"
                ],
                "properties": {
                  "userId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "60f6d4c2e1d3c44d3cae1a01"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "../../components/schemas/carts/orderItem.yaml"
                    }
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 599.98
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "Cash On Delivery",
                      "Bank"
                    ],
                    "example": "Cash On Delivery"
                  },
                  "shippingAddress": {
                    "$ref": "../../components/schemas/carts/shippingAddress.yaml"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Paid",
                      "Shipped"
                    ],
                    "default": "Pending"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "data-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "data-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a order!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/order"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/cart/update": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update cart",
        "operationId": "updateCart",
        "description": "get user orders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "reguestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 200
                  },
                  "message": {
                    "type": "string",
                    "example": "Successfully updated cart!"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "../../components/schemas/carts/cart.yaml"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated cart!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated cart!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/cart"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get of cart",
        "operationId": "getCart",
        "description": "get user orders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found carts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found carts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/cart"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get list of products",
        "operationId": "getProducts",
        "description": "Get list of users with this endpoint",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "age"
            },
            "description": "All product's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found products!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found products!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/products"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products by id",
        "operationId": "getProductById",
        "description": "Get products by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get products by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found student with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/products"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "reviews": {
        "type": "object",
        "required": [
          "name",
          "testimonial"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "66163bca7b5c1c0013d0c5e9"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "testimonial": {
            "type": "string",
            "example": "This service was excellent"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-10T12:34:56.789Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-10T12:34:56.789Z"
          }
        }
      },
      "pharmacies": {
        "type": "object",
        "required": [
          "name",
          "address",
          "city",
          "phone",
          "rating"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the pharmacy"
          },
          "address": {
            "type": "string",
            "description": "Pharmacy's address"
          },
          "city": {
            "type": "string",
            "description": "City where the pharmacy is located"
          },
          "phone": {
            "type": "integer",
            "description": "Pharmacy contact"
          },
          "rating": {
            "type": "number",
            "format": "float",
            "description": "Rating of the pharmacy (1 to 5)"
          },
          "createdAt": {
            "type": "string",
            "format": "data-time",
            "description": "Data of creation"
          },
          "updateAt": {
            "type": "string",
            "format": "data-time",
            "description": "Last Updated  timestamp"
          }
        },
        "example": {
          "_id": "6612db93bcfa2e146e3e0caa",
          "name": "HealCare Pharmacy",
          "address": "123 main Street",
          "city": "New York",
          "phone": 1234567890,
          "rating": 4.8,
          "createdAt": "2025-04-07T10:30:00.000Z",
          "updatedAt": "2025-04-07T10:30:00.000Z"
        }
      },
      "orderItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "example": {
          "productId": "60f6d4c2e1d3c44d3cae1a02",
          "name": "T-shirt",
          "price": "number",
          "quantity": 2
        }
      },
      "shippingAddress": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "fullName": "John Doe",
          "phone": "+380991234567",
          "address": "123 Main St",
          "city": "Kyiv",
          "zipCode": "01001",
          "country": "Ukraine"
        }
      },
      "order": {
        "type": "object",
        "required": [
          "userId",
          "items",
          "totalAmount",
          "paymentMethod"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "60f6d4c2e1d3c44d3cae1a01"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderItem"
            }
          },
          "totalAmount": {
            "type": "number",
            "example": 599.98
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "Cash On Delivery",
              "Bank"
            ],
            "example": "Cash On Delivery"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/shippingAddress"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Paid",
              "Shipped"
            ],
            "default": "Pending"
          },
          "createdAt": {
            "type": "string",
            "format": "data-time"
          },
          "updateAt": {
            "type": "string",
            "format": "data-time"
          }
        }
      },
      "cartItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "objectId",
            "description": "ID product",
            "example": "6613e7e013c5e9481f27db88"
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "quantity of goods",
            "example": 2
          }
        },
        "required": [
          "productId",
          "quantity"
        ]
      },
      "cart": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectId",
            "description": "Unique cart identifier"
          },
          "userId": {
            "type": "string",
            "format": "objectId",
            "description": "User ID"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cartItem"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "data-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "data-time"
          }
        },
        "required": [
          "userId",
          "items"
        ],
        "example": {
          "_id": "6613e90013c5e9481f27db8a",
          "userId": "6613e7c813c5e9481f27db87",
          "items": [
            {
              "productId": "6613e7e013c5e9481f27db88",
              "quantity": 2
            }
          ],
          "createdAt": "2025-04-08T09:25:00.000Z",
          "updatedAt": "2025-04-08T09:45:00.000Z"
        }
      },
      "products": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "suppliers",
          "stock",
          "price",
          "category",
          "photo"
        ],
        "properties": {
          "_id": {
            "description": "Product ID",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Product name",
            "type": "string",
            "example": "Apple iPhone 13"
          },
          "suppliers": {
            "description": "Product supplier",
            "type": "string",
            "example": "Apple Inc."
          },
          "stock": {
            "description": "Available stock quantity",
            "type": "number",
            "example": 150
          },
          "price": {
            "description": "Product price in USD",
            "type": "number",
            "example": 999.99
          },
          "category": {
            "description": "Product category",
            "type": "string",
            "example": "Electronics"
          },
          "photo": {
            "description": "Product image URL",
            "type": "string",
            "example": "https://example.com/image.jpg"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}